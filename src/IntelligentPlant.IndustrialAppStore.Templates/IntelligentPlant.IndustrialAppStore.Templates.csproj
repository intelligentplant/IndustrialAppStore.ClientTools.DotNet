<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageType>Template</PackageType>
    <Title>Industrial App Store Templates</Title>
    <Authors>Intelligent Plant</Authors>
    <Description>Templates to use when creating an application for the Intelligent Plant Industrial App Store.</Description>
    <PackageTags>$(PackageTags);dotnet-new;templates</PackageTags>
    <TargetFramework>netstandard2.0</TargetFramework>
    <IncludeDevelopmentPackages>false</IncludeDevelopmentPackages>
    <DeterministicSourcePaths>false</DeterministicSourcePaths>
    <IncludeContentInPack>true</IncludeContentInPack>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <ContentTargetFolders>content</ContentTargetFolders>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="**\*" /><Compile Remove="**\*" />
    <Content Include="templates\**\*" />
    <None Include="src\**\*" />
  </ItemGroup>

  <Target Name="CopyIasMvcTemplateFiles" BeforeTargets="Build">
    <ItemGroup>
      <!-- Delete all files from the template's content folder except for the template 
           configuration. -->
      <_FilesToDelete Include="templates\iasmvc\**" Exclude="templates\iasmvc\.template.config\**" />
      <!-- Copy files from the ExampleMvcApplication project. -->
      <_FilesToCopy Include="..\..\samples\ExampleMvcApplication\**\*" Exclude="..\..\samples\ExampleMvcApplication\.gitignore;..\..\samples\ExampleMvcApplication\README.md;..\..\samples\ExampleMvcApplication\wwwroot\lib\**;..\..\samples\ExampleMvcApplication\**\bin\**;..\..\samples\ExampleMvcApplication\**\obj\**;..\..\samples\ExampleMvcApplication\**\.config\*;..\..\samples\ExampleMvcApplication\**\*.user" />
      <!-- Copy files from the src folder in this project. Note that some of these files 
           overwrite equivalent files included from the ExampleMvcApplication project. -->
      <_FilesToCopy Include=".\src\iasmvc\**" />
    </ItemGroup>

    <!-- Delete existing files from the template's content folder. -->
    <Delete Files="@(_FilesToDelete)" />

    <!-- Copy files to the template's content folder. -->
    <Copy SkipUnchangedFiles="false" SourceFiles="@(_FilesToCopy)" DestinationFiles="@(_FilesToCopy->'templates\iasmvc\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="ReplacePackageVersions" BeforeTargets="Build" AfterTargets="CopyIasMvcTemplateFiles">
    <!-- On Windows we use PowerShell (powershell.exe) -->
    <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
      <_PowerShellExe>powershell.exe</_PowerShellExe>
      <_ExecutionPolicy>-ExecutionPolicy Bypass</_ExecutionPolicy>
    </PropertyGroup>

    <!-- On Linux/MacOS we use PowerShell Core (pwsh) -->
    <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
      <_PowerShellExe>pwsh</_PowerShellExe>
      <_ExecutionPolicy></_ExecutionPolicy>
    </PropertyGroup>

    <PropertyGroup>
      <_PowerShellScriptPath>$([System.IO.Path]::GetFullPath($(MSBuildProjectDirectory)/Insert-PackageVersions.ps1))</_PowerShellScriptPath>
      <_ProjectFilePath>$([System.IO.Path]::GetFullPath($(MSBuildProjectDirectory)/templates/iasmvc/ExampleMvcApplication.csproj))</_ProjectFilePath>
      <_PackageVersionsFile>$([MSBuild]::GetPathOfFileAbove('Directory.Packages.props', '$(MSBuildThisFileDirectory)../'))</_PackageVersionsFile>
      <_DefaultPackageVersion>$(Version)</_DefaultPackageVersion>
    </PropertyGroup>

    <!-- Ensure that the example hosted adapter project specifies the package versions defined by Central Package Management. -->
    <Exec Command="$(_PowerShellExe) -NoLogo -NonInteractive $(_ExecutionPolicy) -File &quot;$(_PowerShellScriptPath)&quot; -ProjectFile &quot;$(_ProjectFilePath)&quot; -PackageVersionsFile &quot;$(_PackageVersionsFile)&quot; -DefaultPackageVersion &quot;$(_DefaultPackageVersion)&quot;" />
  </Target>

</Project>
